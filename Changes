Revision history for Devel-Trepan

0.58 May 20, 2014 - Henry Frankel

- Earlier version of "deparse" got in 0.57 dist
- Add optional commands: "disassemble" and "shell" to top-level pod.

0.57 May 20, 2014

- add "deparse" command
- fix botched "info packages"
- Add deparse and the optional commands in the overal POD documentation

0.56 May 11, 2014 - Happy Mothers' Day

- Lots more Pod reworking
- Add command "info packages".
- Add filename and package name completion.

0.55 May 9, 2014

- Add -I (include) ad -M (module) and -v (verbose) options on trepan.pl
- Add function completion on eval and autoeval.
- Go over subcommand pod documentation.

0.54 May 4, 2014

- Expand previous effort started in 0.53 to cross index POD text,
  use more POD tagging and regularize its use, e.g. fixed text is bold.
  Change "see also" Go over help PODs and reduce redundancy of POD text in
  trepan.pm with that in the individual commands.
- Try to fix CPAN indexing problems

0.53 May 3, 2014

- Completion for out-of-process control
- Allow Data::Dumper::Concise to print values
- Add more Perl module recommendations, such as to our plugins
- Enbugger - check stack level
- Redo the way options server protocol options works
- start using utf8 some places.
- Improve documentation on "set display"
- Reduce duplication in trepan.pod/pm by using links (L<>) better.
- misc bug fixes and doc improvements.

0.52 Mar 10, 2014

A number of serious bugs addressed:
  * Work around perl bug RT 115742 in recursive calls to DB::DB()
  * Test for non-threadedness
  * Currect  showing op location. (More later for uplevel calls)
  * fake CORE::caller in debugger eval's
    so that it reflects caller as seen by the debugged program,

0.51 Nov 17, 2013 Sister Release
- Start to have true subroutine breakpoints. This is fragile, and more
  work would be nice.. But it's more honest.
- Skip test 10test-options.t if Test::More is >= 1.0. See issue 25
- Match PERL_RL environment var test for presence of
  Term:ReadLine:Perl5 to match that used in Term::ReadLine. In
  particular, ignore case.
-  Reduce version required on Time::HiRes based on
   empirical travis tests

0.50 Jun 22, 2013
- Address smoker bugs.

0.49 Jun 12, 2013

- Add "set substitute path" and "set substitute string" commands
- Add provision for tracing use (Use.pm and debuggable SelfLoader.pm)
- Bump $deep based on discussion in RT #117407
- First use of Term::ReadLine::Perl5 so we can now have command history
  saving enabled - set PERL_RL=Perl5 to use.
- eval file remapping fixes
- Perl bug #116358
- Misc bug fixes

0.48  Jan 6, 2013
- Sort hash keys in Data::Printer output
- fix bug in "set autoeval"
- add package and function name to "info program"

0.47  Dec 18, 2012
- Bullwinkle protocol tolerance. Some small changes, mostly typos and
  better gdb compliance.

0.45 - Oct 2, 2012
- Add "load source" to read in Perl source file somewhat like it would be
  when debugger reads the file under debugging. Might be useful when
  used via in Enbugger.
- When stopping, we were printing too many lines if the first statement
  was incomplete. For example:
    if (0) {
      $x = 1;
      $y = 2;
    };
  was printing entire "if (0) { ... }" rather than stop after "$x = 1";
- Smallbug fixes

0.44 - Sep 26, 2012
- Rerelease to try to address a CPAN Indexing failure

0.43 - Sep 25, 2012
- Bugfix release. See ChangeLog

0.42 - Sep 18, 2012
- Botched 0.41 release

0.41 - Sep 18, 2012
- release to asssist pending Devel::Trepan::Disassemble and to see if we
  can resolve a rlib weirdness.
- More doc changes
- Add color setting for black

0.40 - Sep 17, 2012
- Rerelease to fix yet another problem with Build.PL

0.39 - Sep 17, 2012

- Rerelease to fix yet another problem with Build.PL
- Improve POD documentation for DB::LineCache

0.38 - Sep 16, 2012
- add option max_continue on DB::LineCache to use heuristic to look end
  of a Perl statement
- Work on Pod formatting of DB::LineCache
- Reduce "incomplete" testing because smokers can't deal with rlib in Build.PL

0.37 - Sep 16, 2012
- Fix some CPAN Tester failures and pod formatting.

0.36 - Sep 15, 2012

- Allow color in Data::Printer output
- Help strings are now in pod format and we run pod2text to give help.
  This means terminal width settings can be adjusted (with set max width)
  and terminal highlighting is handled. We are also closer to automating
  a Devel::Trepan manual
- If Devel::Callsite is installed we can show a more exact location of
  where we are.
- Add debugger command 'load command' to force loading or reloading a
  debugger command file
- Add debugger command 'load module' to foce loading or reloading a
  Perl module
- Continuation of a command now allowed if you end a line with '\'
  This should make writing macros for example easier and may help
  in eval
- There's enough flexibility with eval that we don't need special
  ! handling. Remove that.
- Bug in tab completion of help syntax fixed.
- Tidy syntax errors in evaluation

0.35  - Aug 27, 2012
- More CPANTS failures, Had broken tolerance in older Perls and
  perl compiled with usesiteconfig
- Add more verbiage to Trepan.pm and revise help docs
- Don't trace into Devel::Trepan::Terminated
- Fix another alias reporting bug.

0.34  - Aug 26, 2012
- Add step count.
- Avoid DB::fake for CPAN indexer
- Fix issue 11
- Add set debug {except, skip, macro}.
- Fix Bug in getting macro parameters
- Rerelease for CPANTS failures

0.33  - Aug 24, 2012
- Rerelease for CPANTS failures
- Fix issue 10

0.32  - Aug 24, 2012

- Fix bugs
- Rerelease for CPANTS failures

0.31  - Aug 20, 2012

- Rerelease for CPANTS failures.

0.30  - Aug 19, 2012

- Incompatible change: "d" is now "delete" like gdb, not "down". Add aliases
  for "h" and remove "u" for "up". All of this is to follow gdb closer.
- Incompatible change: "set/show evaldisplay" is now "set/show display eval"
- Set $0, __FILE__, and, __LINE__ to look like it would be inside the debugged
  program
- Add -e option to trepan.pl same as Perl
- Location now shows package name like recent perl5db
- More than one line may be shown if the line we are on isn't a full statement
- Add "info line"
- Add gdb "show args"
- Add "Set Display COP" to show COP address in location
- Allow setting a breakpoint on a line even if it isn't recorded as a place
  that is stoppable.
- Fix various bugs

0.2.1  - May 25, 2012

- Address some CPANTS failures. Some doc tweaks.

0.2.0  - May 24 2012
- Nexting should be more accurate albeit slower
  We can't rely on $DB:single -- sigh
- Remove defined(@array) which is deprecated in Perl 5.16
- Allow alias replacement to be a blank-delimited string
- eval? treats 'local' and 'our' like eval? for 'my', e.g.
    local ($a,b) =  ($v1,$v2)
  displays ($v1,v2) without setting. If you want to set, use 'eval'


0.1.9  - Jan 16, 2012
- Allow Data::Print to be used for printing eval output
- Use sigils in eval? and eval; was previously done only in autoeval
- "info program" may show COP position.
- Miscelleneous bug fixes and documentation corrections and improvements.

0.1.8  - Jan 3, 2012

- Perl 5.8.8 tolerance - this time, for sure!
- Eval::WithLexicals is optional. Darn you, RedHat!

0.1.7  - Jan 2, 2012

- Perl 5.8.8 tolerance.
- Use Eval::WithLexicals to evaluate stack frames other than the
  topmost frame.

0.1.6  - Jan 2, 2012

- Rereleased because of weird interaction in rlib.

0.1.5  - Jan 1, 2012
- Works on Perl 5.8 (Only 5.8.9 tested)
- Add rudimentary signal handling
- Warn if we try to set a breakpoint on a "use" statement line.
- Auto evaluation will determine the return type based on the first (sigil)
  character of an expression, e.g. the expression: %ENV treated as a hash, and
  the expression @ARGV is treated as an array by default. Use explicit overrides
  to change this. For example: "eval$ @ARGV + 1" or "$ @ARGV+1"
- add --cmddir option to all addition of user-specified commands. As a
  a result...
  * 'disassemble' and 'shell' commands are now in a separate package
- In line with the above, reduce the minimum number of dependencies needed
  to build.

0.1.4  - Dec 16, 2011
- Works on ActiveState Perl and Perl 10.0
- Fix CPANTS errors when Term::ReadLine::Perl dies in ->new()
- Work on remote debugging
  * Add client .source to run a remote client-based profile
  * Use common User output routines

0.1.3  - Dec 11, 2011
- Add remote debugging over a TCP socket. See --server and --client
  on trepan.pl and debugger "server" command
- Allow break FILENAME LINENUMBER
- Tests work in Strawberry Perl
- Complete completion more. Completion offers choices properly by using
  Term::Complete::Perl
- Add debugger commands:
   * info functions
   * info variables
   * server
   * show interactive
- Make easier to build on older Perl (but still >= 5.10.0)
- Start script trepanpl is now trepan.pl
- Add '--no-readline' option on trepan.pl
- Remove "shell" for now. Will reinstate sometime later with Devel::REPL
  rather than Psh.

0.1.2  - Nov 17, 2011
- Add nested debugging via the "debug" command
- Make code work better on cygwin and with some older modules
- Some code cleanup

0.1.1  - Nov 11, 2011

- Add watchpoints
- Don't require Term::ReadLine::Gnu or Term::Readline
- Reduce uses Term::ReadLine when it not needed, e.g. trepanpl --command
  or --testing options.
- Use "use rlib" instead of "use lib"
- Remove deprecated warning given by newer Perls (Reine Urban and Shlomi Fish)
- Add --no-match-vars to Use English. (Shlomi Fish)

0.1.0  - Oct 27, 2011

Initial release.

Some cool things not in other Perl debuggers
- Syntax higlighting via Syntax::Highlight::Perl::Improved
- Readline debugger command completion
- Extensive help inside the debugger
- Gdb-like command set
- Standalone binary install: trepanpl
   (Enbugger support provided as a patch to Enbugger)
- trace mode for POSIX-shell "set -x"-like tracing: trepanpl -x ...
- auto evaluation in hash and array and scalar context:
    @ array-expression # for array
    % hash-expression  # for hash
    [$] expression     # for scalar
- Evaluation results saved in global array @DB::D
- Ability to go into a Psh shell
- Debugger Command aliases for simple things and
- Debugger Command macros via a perl anonymous sub for
  more complicated things.
- Extensible command set
- many unit and integration tests

Still, much remains to be done (out-of-process control, installing
signal handlers, adding watch expressions), so please help out!
