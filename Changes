Revision history for Devel-Trepan

0.1.4  - Dec 16, 2011
- Works on ActiveState Perl and Perl 10.0
- Fix CPANTS errors when Term::ReadLine::Perl dies in ->new()
- Work on remote debugging
  * Add client .source to run a remote client-based profile
  * Use common User output routines

0.1.3  - Dec 11, 2011
- Add remote debugging over a TCP socket. See --server and --client
  on trepan.pl and debugger "server" command
- Allow break FILENAME LINENUMBER
- Tests work in Strawberry Perl
- Complete completion more. Completion offers choices properly by using
  Term::Complete::Perl
- Add debugger commands: 
   * info functions
   * info variables
   * server
   * show interactive
- Make easier to build on older Perl (but still >= 5.10.0) 
- Start script trepanpl is now trepan.pl
- Add '--no-readline' option on trepan.pl
- Remove "shell" for now. Will reinstate sometime later with Devel::REPL
  rather than Psh.

0.1.2  - Nov 17, 2011
- Add nested debugging via the "debug" command
- Make code work better on cygwin and with some older modules
- Some code cleanup

0.1.1  - Nov 11, 2011

- Add watchpoints
- Don't require Term::ReadLine::Gnu or Term::Readline
- Reduce uses Term::ReadLine when it not needed, e.g. trepanpl --command 
  or --testing options.
- Use "use rlib" instead of "use lib"
- Remove deprecated warning given by newer Perls (Reine Urban and Shlomi Fish)
- Add --no-match-vars to Use English. (Shlomi Fish)

0.1.0  - Oct 27, 2011

Initial release. 

Some cool things not in other Perl debuggers
- Syntax higlighting via Syntax::Highlight::Perl::Improved
- Readline debugger command completion
- Extensive help inside the debugger
- Gdb-like command set
- Standalone binary install: trepanpl
   (Enbugger support provided as a patch to Enbugger)
- trace mode for POSIX-shell "set -x"-like tracing: trepanpl -x ...
- auto evaluation in hash and array and scalar context:
    @ array-expression # for array
    % hash-expression  # for hash
    [$] expression     # for scalar
- Evaluation results saved in global array @DB::D
- Ability to go into a Psh shell
- Debugger Command aliases for simple things and
- Debugger Command macros via a perl anonymous sub for
  more complicated things.
- Extensible command set
- many unit and integration tests

Still, much remains to be done (out-of-process control, installing
signal handlers, adding watch expressions), so please help out!
