-- (gcd.pl:18)
die sprintf "Need two integer arguments, got %d", scalar(@ARGV) unless 
basename is on.
highlight is off.
set auto eval is on.
$DB::D[0] = <undef>
-- ( (eval remapped 4)
$DB::in_debugger=0;
-- (gcd.pl:9)
    my ($a, $b) = @_;
-- (gcd.pl:11)
    ($a, $b) = ($b, $a) if ($a > $b);
$DB::D[0] = 1
$DB::D[1] = 1
-- (gcd.pl:13)
    return undef if $a <= 0;
-- (gcd.pl:14)
    return $a if ($a == 1) or ($b-$a == 0);
$DB::D[2] = $VAR1 = 1;
Leaving nested debug level 1
-- (gcd.pl:18)
die sprintf "Need two integer arguments, got %d", scalar(@ARGV) unless 
$DB::D[3] = <undef>
-- ( (eval remapped 4)
$DB::in_debugger=0;
-- (gcd.pl:9)
    my ($a, $b) = @_;
-- (gcd.pl:11)
    ($a, $b) = ($b, $a) if ($a > $b);
$DB::D[3] = 1
$DB::D[4] = 1
-- ( (eval remapped 4)
-- (gcd.pl:9)
    my ($a, $b) = @_;
-- (gcd.pl:11)
    ($a, $b) = ($b, $a) if ($a > $b);
$DB::D[5] = 2
-- (gcd.pl:13)
    return undef if $a <= 0;
-- (gcd.pl:14)
    return $a if ($a == 1) or ($b-$a == 0);
$DB::D[6] = $VAR1 = 2;
Leaving nested debug level 2
-- (gcd.pl:11)
    ($a, $b) = ($b, $a) if ($a > $b);
-- (gcd.pl:13)
    return undef if $a <= 0;
-- (gcd.pl:14)
    return $a if ($a == 1) or ($b-$a == 0);
$DB::D[7] = $VAR1 = 1;
Leaving nested debug level 1
-- (gcd.pl:18)
die sprintf "Need two integer arguments, got %d", scalar(@ARGV) unless 